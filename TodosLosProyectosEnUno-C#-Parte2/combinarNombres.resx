<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>